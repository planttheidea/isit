{"version":3,"sources":["webpack://isit/webpack/universalModuleDefinition","webpack://isit/webpack/bootstrap","webpack://isit/./src/arithmetic.js","webpack://isit/./src/array.js","webpack://isit/./src/environment.js","webpack://isit/./src/index.js","webpack://isit/./src/object.js","webpack://isit/./src/presence.js","webpack://isit/./src/regexp.js","webpack://isit/./src/string.js","webpack://isit/./src/time.js","webpack://isit/./src/type.js"],"names":["EPSILON","Number","GET_OWN_PROPERTY_NAMES","Object","getOwnPropertyNames","isitAbove","object","minimumValue","isitBelow","maximumValue","isitDecimal","isitEqual","object1","object2","Math","abs","length","index","object1Properties","object2Properties","isitEven","isitFinite","POSITIVE_INFINITY","NEGATIVE_INFINITY","isitInfinite","isitInteger","isitNegative","isitOdd","isitOver","isitPositive","isitUnder","isitWithin","minimum","maximum","multiParamFunctions","above","below","decimal","equal","even","finite","infinite","integer","negative","odd","over","positive","under","within","checkSortedAsc","array","current","next","checkSortedDesc","isitInArray","item","indexOf","isitSorted","shallowClone","sort","inArray","sorted","HAS_WINDOW","window","NAVIGATOR_IN_WINDOW","hasNavigatorProperty","property","navigator","toLowerCase","USER_AGENT","VENDOR","APP_VERSION","ANDROID_REGEXP","APPLE_COMPUTER_REGEXP","APPLE_WEBKIT_REGEXP","BB10_REGEXP","BLACKBERRY_REGEXP","CHROME_REGEXP","CHROME_OR_CHROMIUM_REGEXP","EDGE_REGEXP","FIREFOX_REGEXP","GECKO_REGEXP","GOOGLE_INC_REGEXP","IPAD_REGEXP","IPHONE_REGEXP","IPOD_REGEXP","LIKE_GECKO_REGEXP","LINUX_REGEXP","MAC_REGEXP","MOBILE_REGEXP","MSIE_REGEXP","OPERA_LEGACY_REGEXP","OPERA_MODERN_REGEXP","PHONE_REGEXP","RV11_REGEXP","SAFARI_REGEXP","TOUCH_REGEXP","TRIDENT_REGEXP","UNIX_REGEXP","WIN_REGEXP","WINDOWS_NT_REGEXP","isitAndroid","userAgent","test","isitAndroidPhone","isitAndroidTablet","isitBlackberry","isitBlink","isitBrowser","isitChrome","vendor","isitIpad","isitIphone","isitIpod","isitIos","isitWindows","appVersion","isitWindowsPhone","isitWindowsTablet","isitMobile","isitTablet","isitDesktop","isitEdge","isitFirefox","isitGecko","isitIe","version","RegExp","isitLinux","isitMac","isitNode","isitOnline","onLine","isitOffline","isitOpera","isitPresto","isitSafari","isitTrident","isitTouchDevice","document","DocumentTouch","isitWebkit","android","androidPhone","androidTablet","blackberry","blink","browser","chrome","desktop","edge","firefox","gecko","ie","ios","ipad","iphone","ipod","linux","mac","mobile","node","offline","online","opera","presto","safari","tablet","touchDevice","trident","webkit","windows","windowsPhone","windowsTablet","noAllOrAnyFunctions","arithmeticFunctions","arrayFunctions","keys","environment","map","key","objectFunctions","stringFunctions","timeFunctions","getAnyAllObjectParameters","parameters","isitAll","func","objects","isitAny","isitNot","isit","type","presence","regexp","string","arithmetic","time","all","any","not","isitFunction","setNamespace","toString","prototype","NODE_LIST_REGEXP","isitDomNode","nodeType","isitDomNodeList","call","isitJquery","$object","jquery","getPrototypeOf","isitPropertyCount","count","isitPropertyDefined","hasOwnProperty","isitWindowObject","domNode","domNodeList","propertyCount","propertyDefined","windowObject","WHITESPACE_REGEXP","isitWhitespace","isitEmpty","propertyNames","objectString","Array","slice","isitExisty","undefined","isitFalsy","isitSpace","isitTruthy","empty","existy","falsy","space","truthy","whitespace","regexps","affirmative","alphaNumeric","caPostalCode","creditCard","dateString","email","eppPhone","hexColor","hexadecimal","ip","ipv4","ipv6","isoDateString","nanpPhone","socialSecurityNumber","timeString","ukPostCode","url","usZipCode","isitAffirmative","isitAlphaNumeric","isitCaPostalCode","isitCreditCard","isitDateString","isitEmail","isitEppPhone","isitHexadecimal","isitHexColor","isitIpAddress","isitIpv4Address","isitIpv6Address","isitIsoDateString","isitNanpPhone","isitSocialSecurityNumber","isitTimeString","isitUkPostCode","isitUrl","isitUsZipCode","setRegExp","regExp","regExpName","DATA_URL_REGEXP","DOUBLE_BYTE_REGEXP","HTML_REGEXP","RS_ASTRAL_RANGE","RS_COMBO_MARKS_RANGE","RS_COMBO_SYMBOLS_RANGE","RS_DINGBAT_RANGE","RS_LOWER_RANGE","RS_MATH_OP_RANGE","RS_NON_CHAR_RANGE","RS_QUOTE_RANGE","RS_SPACE_RANGE","RS_UPPER_RANGE","RS_VAR_RANGE","RS_BREAK_RANGE","RS_BREAK","RS_COMBO","RS_DIGITS","RS_DINGBAT","RS_LOWER","RS_MISC","RS_FITZ","RS_MODIFIER","RS_NON_ASTRAL","RS_REGIONAL","RS_SURR_PAIR","RS_UPPER","RS_ZWJ","RS_LOWER_MISC","RS_UPPER_MISC","RE_OPT_MOD","RS_OPT_VAR","RS_OPT_JOIN","join","RS_SEQ","RS_EMOJI","HAS_COMPLEX_WORD","COMPLEX_WORD","SIMPLE_WORD","getArrayOfWords","pattern","match","toCamelCase","arrayOfWords","camelCaseString","forEach","word","charAt","toUpperCase","toKebabCase","kebabCaseString","toSnakeCase","snakeCaseString","toStartCase","startCaseString","isitCamelCase","isitCapitalized","words","split","capitalized","isitDataUrl","isitDoubleByte","isitEndWith","endingString","lastIndexOf","isitEndsWith","isitHtml","isitInclude","substring","isitIncludes","isitKebabCase","isitLowerCase","isitPalindrome","spacelessString","replace","reverse","isitSnakeCase","isitStartCase","isitStartWith","isitStartsWith","isitUpperCase","camelCase","dataUrl","doubleByte","endWith","endsWith","html","include","includes","kebabCase","lowerCase","palindrome","snakeCase","startCase","startWith","startsWith","upperCase","DAY_STRINGS","MONTH_STRINGS","isitDay","dayString","Date","getDay","isitDayLightSavingTime","objectYear","getFullYear","january","july","getTimezoneOffset","max","isitDaylightSavingsTime","isitFuture","valueOf","now","isitInDateRange","minimumDate","maximumDate","objectTime","getTime","isitInLastMonth","today","oneMonthAgo","setMonth","getMonth","isitInLastWeek","sevenDaysAgo","setDate","getDate","isitInLastYear","oneYearAgo","setFullYear","isitInNextMonth","oneMonthFromNow","isitInNextWeek","sevenDaysFromNow","isitInNextYear","oneYearFromNow","isitLeapYear","isitMonth","monthString","isitPast","isitQuarterOfYear","quarterNumber","floor","isitToday","process","toDateString","isitTomorrow","tomorrow","isitWeekday","day","isitWeekend","isitYear","yearNumber","isitYesterday","yesterday","dayLightSavingTime","daylightSavingsTime","future","inDateRange","inLastMonth","inLastWeek","inLastYear","inNextMonth","inNextWeek","inNextYear","leapYear","month","past","quarterOfYear","weekday","weekend","year","getObjectToStringValue","isitNull","isitArguments","isitArray","isitBoolean","isitString","isitChar","isitDate","isitError","isitJSON","JSON","parse","ex","isitNaN","isitNumber","isitObject","isitRegExp","isitSameType","isitSymbol","isitTypedArray","objectToString","isitUndefined","arguments","boolean","char","date","error","function","json","nan","null","number","sameType","symbol","typedArray"],"mappings":"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","file":"isit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"isit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"isit\"] = factory();\n\telse\n\t\troot[\"isit\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {\n  isitArray,\n  isitBoolean,\n  isitNaN,\n  isitNull,\n  isitNumber,\n  isitObject,\n  isitRegExp,\n  isitSameType,\n  isitString,\n  isitUndefined,\n} from './type';\n\nconst EPSILON = Number.EPSILON || 2.220446049250313e-16;\nconst GET_OWN_PROPERTY_NAMES = Object.getOwnPropertyNames;\n\n/**\n * Checks to see if object is higher in value than a minimum numeric value\n *\n * @param {any} object\n * @param {number} minimumValue\n * @returns {boolean}\n */\nexport const isitAbove = (object, minimumValue) => {\n  if (!isitNumber(object) || !isitNumber(minimumValue)) {\n    return false;\n  }\n\n  return object > minimumValue;\n};\n\n/**\n * Checks to see if object is lower in value than a maximum numeric value\n *\n * @param {any} object\n * @param {number} maximumValue\n * @returns {boolean}\n */\nexport const isitBelow = (object, maximumValue) => {\n  if (!isitNumber(object) || !isitNumber(maximumValue)) {\n    return false;\n  }\n\n  return object < maximumValue;\n};\n\n/**\n * Checks to see if object is a decimal (meaning float)\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDecimal = (object) => isitNumber(object) && object % 1 !== 0;\n\n/**\n * Checks to see if objects are of the same type and equal in value,\n * which is checked deeply for objects and arrays\n *\n * @param {any} object1\n * @param {any} object2\n * @returns {boolean}\n */\nexport const isitEqual = (object1, object2) => {\n  if (!isitSameType(object1, object2)) {\n    return false;\n  }\n\n  if (isitUndefined(object1)) {\n    return isitUndefined(object2);\n  }\n\n  if (isitNull(object1)) {\n    return isitNull(object2);\n  }\n\n  if (isitDecimal(object1)) {\n    return Math.abs(object1 - object2) < EPSILON;\n  }\n\n  if (isitNumber(object1)) {\n    return object1 === object2 && 1 / object1 === 1 / object2;\n  }\n\n  if (isitString(object1) || isitRegExp(object1)) {\n    return `${object1}` === `${object2}`;\n  }\n\n  if (isitBoolean(object1)) {\n    return object1 === object2;\n  }\n\n  if (isitArray(object1)) {\n    if (object1.length !== object2.length) {\n      return false;\n    }\n\n    for (let index = 0, length = object1.length; index < length; index++) {\n      if (!isitEqual(object1[index], object2[index])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (isitObject(object1)) {\n    const object1Properties = GET_OWN_PROPERTY_NAMES(object1);\n    const object2Properties = GET_OWN_PROPERTY_NAMES(object2);\n\n    if (!isitEqual(object1Properties, object2Properties)) {\n      return false;\n    }\n\n    for (let index = 0, length = object1Properties.length; index < length; index++) {\n      if (!isitEqual(object1[index], object2[index])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Checks if object is an even integer\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitEven = (object) => isitNumber(object) && object % 2 === 0;\n\n/**\n * Checks to see if object is not either positive or negative Infinity\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitFinite = (object) =>\n  object !== Number.POSITIVE_INFINITY && object !== Number.NEGATIVE_INFINITY && !isitNaN(object);\n\n/**\n * Checks to see if object is either positive or negative Infinity\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInfinite = (object) => !isitFinite(object);\n\n/**\n * Checks to see if object is an integer\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInteger = (object) => isitNumber(object) && object % 1 === 0;\n\n/**\n * Checks to see if object is a negative number\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitNegative = (object) => isitNumber(object) && object < 0;\n\n/**\n * Checks to see if object is an odd integer\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitOdd = (object) => isitNumber(object) && object % 2 === 1;\n\n/**\n * Alias for isitAbove\n *\n * @type {function()}\n */\nexport const isitOver = isitAbove;\n\n/**\n * Checks to see if object is a positive number\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitPositive = (object) => isitNumber(object) && object > 0;\n\n/**\n * Alias for isitBelow\n *\n * @type {function()}\n */\nexport const isitUnder = isitBelow;\n\n/**\n * Checks to see if object is a numeric value is at least the\n * minimum numeric value, and is at most the maximum numeric value\n *\n * @param {any} object\n * @param {number} minimum\n * @param {number} maximum\n * @returns {boolean}\n */\nexport const isitWithin = (object, minimum, maximum) =>\n  isitNumber(object) && isitNumber(minimum) && isitNumber(maximum) && object >= minimum && object <= maximum;\n\n/**\n * Functions we don't want to appear in any or all\n */\nexport const multiParamFunctions = ['above', 'below', 'equal', 'under', 'within'];\n\nexport default {\n  above: isitAbove,\n  below: isitBelow,\n  decimal: isitDecimal,\n  equal: isitEqual,\n  even: isitEven,\n  finite: isitFinite,\n  infinite: isitInfinite,\n  integer: isitInteger,\n  negative: isitNegative,\n  odd: isitOdd,\n  over: isitOver,\n  positive: isitPositive,\n  under: isitUnder,\n  within: isitWithin,\n};\n","import {isitArray} from './type';\n\nconst checkSortedAsc = (array) => {\n  for (let index = 0, length = array.length; index < length; index++) {\n    const current = array[index];\n    const next = array[index + 1];\n\n    if (typeof next !== 'undefined' && current > next) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst checkSortedDesc = (array) => {\n  for (let index = array.length; index--;) {\n    const current = array[index];\n    const next = array[index - 1];\n\n    if (typeof next !== 'undefined' && current > next) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Checks to see if item exists as a value in\n * the object array\n *\n * @param {any} object\n * @param {any} item\n * @returns {boolean}\n */\nexport const isitInArray = (object, item) => isitArray(object) && object.indexOf(item) !== -1;\n\n/**\n * Checks to see if the object array is already sorted\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitSorted = (object) => {\n  if (!isitArray(object)) {\n    return false;\n  }\n\n  const shallowClone = [...object];\n\n  shallowClone.sort();\n\n  return checkSortedAsc(object, shallowClone) || checkSortedDesc(object, shallowClone);\n};\n\n/**\n * Functions we dont want to show up in any or all\n */\nexport const multiParamFunctions = ['inArray'];\n\nexport default {\n  inArray: isitInArray,\n  sorted: isitSorted,\n};\n","/**\n * Make sure window and navigator exists, else all will blow up\n */\nconst HAS_WINDOW = typeof window !== 'undefined';\nconst NAVIGATOR_IN_WINDOW = HAS_WINDOW && 'navigator' in window;\n\n/**\n * Returns property from navigator object exists, else returns false\n *\n * @param {string} property\n * @returns {boolean|string}\n */\nconst hasNavigatorProperty = (property) =>\n  NAVIGATOR_IN_WINDOW && property in navigator && navigator[property].toLowerCase();\n\n/**\n * Used in pretty much all the checkers\n */\nconst USER_AGENT = hasNavigatorProperty('userAgent');\nconst VENDOR = hasNavigatorProperty('vendor');\nconst APP_VERSION = hasNavigatorProperty('appVersion');\n\n/**\n * RegExps used for testing\n */\nconst ANDROID_REGEXP = /android/i;\nconst APPLE_COMPUTER_REGEXP = /apple computer/i;\nconst APPLE_WEBKIT_REGEXP = /applewebkit/i;\nconst BB10_REGEXP = /BB10/i;\nconst BLACKBERRY_REGEXP = /blackberry/i;\nconst CHROME_REGEXP = /chrome/i;\nconst CHROME_OR_CHROMIUM_REGEXP = /chrome|chromium/i;\nconst EDGE_REGEXP = /edge/i;\nconst FIREFOX_REGEXP = /firefox/i;\nconst GECKO_REGEXP = /gecko/i;\nconst GOOGLE_INC_REGEXP = /google inc/i;\nconst IPAD_REGEXP = /ipad/i;\nconst IPHONE_REGEXP = /iphone/i;\nconst IPOD_REGEXP = /ipod/i;\nconst LIKE_GECKO_REGEXP = /like gecko/i;\nconst LINUX_REGEXP = /linux/i;\nconst MAC_REGEXP = /mac/i;\nconst MOBILE_REGEXP = /mobile/i;\nconst MSIE_REGEXP = /msie/i;\nconst OPERA_LEGACY_REGEXP = /^Opera\\//;\nconst OPERA_MODERN_REGEXP = /\\x20OPR\\//;\nconst PHONE_REGEXP = /phone/i;\nconst RV11_REGEXP = /rv:11/;\nconst SAFARI_REGEXP = /safari/i;\nconst TOUCH_REGEXP = /touch/i;\nconst TRIDENT_REGEXP = /trident/i;\nconst UNIX_REGEXP = /X11/;\nconst WIN_REGEXP = /win/i;\nconst WINDOWS_NT_REGEXP = /windows nt/i;\n\n/**\n * Checks if device used is running on Android\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitAndroid = (userAgent = USER_AGENT) => ANDROID_REGEXP.test(userAgent);\n\n/**\n * Checks if device used is running on Android and a mobile phone\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitAndroidPhone = (userAgent = USER_AGENT) => isitAndroid(userAgent) && MOBILE_REGEXP.test(userAgent);\n\n/**\n * Checks if device used is running on Android and a mobile phone\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitAndroidTablet = (userAgent = USER_AGENT) => isitAndroid(userAgent) && !MOBILE_REGEXP.test(userAgent);\n\n/**\n * Checks if device used is a Blackberry\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitBlackberry = (userAgent = USER_AGENT) =>\n  BLACKBERRY_REGEXP.test(userAgent) || BB10_REGEXP.test(userAgent);\n\n/**\n * Checks if the browser is using the blink rendering engine\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitBlink = (userAgent = USER_AGENT) => CHROME_REGEXP.test(userAgent);\n\n/**\n * Checks if you are running in a browser\n *\n * @returns {boolean}\n */\nexport const isitBrowser = () => typeof window !== 'undefined';\n\n/**\n * Checks if the browser used is Google Chrome\n *\n * @param {string} userAgent\n * @param {string} vendor\n * @returns {boolean}\n */\nexport const isitChrome = (userAgent = USER_AGENT, vendor = VENDOR) =>\n  CHROME_OR_CHROMIUM_REGEXP.test(userAgent) && GOOGLE_INC_REGEXP.test(vendor);\n\n/**\n * Checks if device used is an iPad\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitIpad = (userAgent = USER_AGENT) => IPAD_REGEXP.test(userAgent);\n\n/**\n * Checks if device used is an iPhone\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitIphone = (userAgent = USER_AGENT) => IPHONE_REGEXP.test(userAgent) && !IPOD_REGEXP.test(userAgent);\n\n/**\n * Checks if device used is an iPod\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitIpod = (userAgent = USER_AGENT) => IPOD_REGEXP.test(userAgent);\n\n/**\n * Checks if operating system used is iOS\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitIos = (userAgent = USER_AGENT) => isitIpad(userAgent) || isitIphone(userAgent) || isitIpod(userAgent);\n\n/**\n * Checks if operating system used is Windows-based\n *\n * @param {string} appVersion\n * @returns {boolean}\n */\nexport const isitWindows = (appVersion = APP_VERSION) => WIN_REGEXP.test(appVersion);\n\n/**\n * Checks if deviced used is a Windows phone\n *\n * @param {string} userAgent\n * @param {string} appVersion\n * @returns {boolean}\n */\nexport const isitWindowsPhone = (userAgent = USER_AGENT, appVersion = APP_VERSION) =>\n  isitWindows(appVersion) && PHONE_REGEXP.test(userAgent);\n\n/**\n * Checks if device used is a Windows tablet\n *\n * @param {string} userAgent\n * @param {string} appVersion\n * @returns {boolean}\n */\nexport const isitWindowsTablet = (userAgent = USER_AGENT, appVersion = APP_VERSION) =>\n  isitWindows(appVersion) && !isitWindowsPhone(userAgent, appVersion) && TOUCH_REGEXP.test(userAgent);\n\n/**\n * Checks if device used is a mobile device (phone or tablet)\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitMobile = (userAgent = USER_AGENT) =>\n  isitIphone(userAgent)\n  || isitIpad(userAgent)\n  || isitAndroidPhone(userAgent)\n  || isitWindowsPhone(userAgent)\n  || isitIpod(userAgent)\n  || isitBlackberry(userAgent);\n\n/**\n * Checks if device used is a tablet\n *\n * @param {string} userAgent\n * @param {string} appVersion\n * @returns {boolean}\n */\nexport const isitTablet = (userAgent = USER_AGENT, appVersion = APP_VERSION) =>\n  isitIpad(userAgent) || isitAndroidTablet(userAgent) || isitWindowsTablet(userAgent, appVersion);\n\n/**\n * Checks if the device used is a desktop\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitDesktop = (userAgent = USER_AGENT) => !isitMobile(userAgent) && !isitTablet(userAgent);\n\n/**\n * Checks if the browser used is Microsoft Edge\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitEdge = (userAgent = USER_AGENT) => EDGE_REGEXP.test(userAgent);\n\n/**\n * Checks if the browser used is Mozilla Firefox\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitFirefox = (userAgent = USER_AGENT) => FIREFOX_REGEXP.test(userAgent);\n\n/**\n * Checks if the rendering agent used is Gecko\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitGecko = (userAgent = USER_AGENT) => GECKO_REGEXP.test(userAgent) && !LIKE_GECKO_REGEXP.test(userAgent);\n\n/**\n * Checks if the browser used is Internet Explorer,\n * and optionally checks if it is a specific version\n *\n * @param {number|string} version\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitIe = (version, userAgent = USER_AGENT) => {\n  if (!version) {\n    return MSIE_REGEXP.test(userAgent) || (WINDOWS_NT_REGEXP.test(userAgent) && RV11_REGEXP.test(userAgent));\n  }\n\n  /**\n   * the reason for the fallback is because IE11 is weird, in that\n   * only certain versions contained MSIE in its user agent\n   */\n  return (\n    new RegExp(`msie ${version}`, 'i').test(userAgent)\n    || (WINDOWS_NT_REGEXP.test(userAgent) && RV11_REGEXP.test(userAgent))\n  );\n};\n\n/**\n * Checks if operating system used is Linux-based\n *\n * @param {string} appVersion\n * @returns {boolean}\n */\nexport const isitLinux = (appVersion = APP_VERSION) => LINUX_REGEXP.test(appVersion) || UNIX_REGEXP.test(appVersion);\n\n/**\n * Checks if operating system used is Mac-based\n *\n * @param {string} appVersion\n * @returns {boolean}\n */\nexport const isitMac = (appVersion = APP_VERSION) => MAC_REGEXP.test(appVersion);\n\n/**\n * Checks if environment code is running in is node.js\n *\n * @returns {boolean}\n */\nexport const isitNode = () => !isitBrowser();\n\n/**\n * Checks if your browser is currently offline\n *\n * @returns {boolean}\n */\nexport const isitOnline = () => NAVIGATOR_IN_WINDOW && navigator.onLine;\n\n/**\n * Checks if your browser is currently online\n *\n * @returns {boolean}\n */\nexport const isitOffline = () => !isitOnline();\n\n/**\n * Checks if browser used is Opera\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitOpera = (userAgent = USER_AGENT) =>\n  // Opera 12 and older versions\n  OPERA_LEGACY_REGEXP.test(userAgent)\n  // Opera 15+\n  || OPERA_MODERN_REGEXP.test(userAgent);\n\n/**\n * Checks if rendering engine used is Presto,\n * which basically amounts to being legacy Opera\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitPresto = (userAgent = USER_AGENT) => OPERA_LEGACY_REGEXP.test(userAgent);\n\n/**\n * Checks if browser used is Safari\n *\n * @param {string} userAgent\n * @param {string} vendor\n * @returns {boolean}\n */\nexport const isitSafari = (userAgent = USER_AGENT, vendor = VENDOR) =>\n  SAFARI_REGEXP.test(userAgent) && APPLE_COMPUTER_REGEXP.test(vendor);\n\n/**\n * Checks if rendering engine used is Trident\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitTrident = (userAgent = USER_AGENT) => TRIDENT_REGEXP.test(userAgent) || /msie [6-9]/i.test(userAgent);\n\n/**\n * Checks if device and browser used supports touch\n *\n * @returns {boolean}\n */\nexport const isitTouchDevice = () =>\n  (HAS_WINDOW && 'ontouchstart' in window) || ('DocumentTouch' in window && document instanceof window.DocumentTouch);\n\n/**\n * Checks if rendering engine used is Webkit\n *\n * @param {string} userAgent\n * @returns {boolean}\n */\nexport const isitWebkit = (userAgent = USER_AGENT) => APPLE_WEBKIT_REGEXP.test(userAgent);\n\nexport default {\n  android: isitAndroid,\n  androidPhone: isitAndroidPhone,\n  androidTablet: isitAndroidTablet,\n  blackberry: isitBlackberry,\n  blink: isitBlink,\n  browser: isitBrowser,\n  chrome: isitChrome,\n  desktop: isitDesktop,\n  edge: isitEdge,\n  firefox: isitFirefox,\n  gecko: isitGecko,\n  ie: isitIe,\n  ios: isitIos,\n  ipad: isitIpad,\n  iphone: isitIphone,\n  ipod: isitIpod,\n  linux: isitLinux,\n  mac: isitMac,\n  mobile: isitMobile,\n  node: isitNode,\n  offline: isitOffline,\n  online: isitOnline,\n  opera: isitOpera,\n  presto: isitPresto,\n  safari: isitSafari,\n  tablet: isitTablet,\n  touchDevice: isitTouchDevice,\n  trident: isitTrident,\n  webkit: isitWebkit,\n  windows: isitWindows,\n  windowsPhone: isitWindowsPhone,\n  windowsTablet: isitWindowsTablet,\n};\n","import arithmetic, {multiParamFunctions as arithmeticFunctions} from './arithmetic';\nimport array, {multiParamFunctions as arrayFunctions} from './array';\nimport environment from './environment';\nimport object, {multiParamFunctions as objectFunctions} from './object';\nimport presence from './presence';\nimport regexp from './regexp';\nimport string, {multiParamFunctions as stringFunctions} from './string';\nimport time, {multiParamFunctions as timeFunctions} from './time';\nimport type, {isitArray} from './type';\n\n/**\n * Get exclude all the multi-parameter functions and all environment functions\n * from being included in the all or any loop\n */\nconst noAllOrAnyFunctions = [\n  ...arithmeticFunctions,\n  ...arrayFunctions,\n  ...Object.keys(environment).map((key) => key),\n  ...objectFunctions,\n  ...stringFunctions,\n  ...timeFunctions,\n];\n\n/**\n * If parameters is an array with a single item, and the first item is itself an array,\n * return the array item, else return the array itself\n *\n * @param {Array} parameters\n * @returns {Array}\n */\nconst getAnyAllObjectParameters = (parameters) => {\n  if (parameters.length === 1 && isitArray(parameters[0])) {\n    return parameters[0];\n  }\n\n  return parameters;\n};\n\n/**\n * Check if all arguments passed return true to function it relates to\n *\n * @param {Function} func\n * @returns {Function}\n */\nconst isitAll = (func) => (...objects) => {\n  objects = getAnyAllObjectParameters(objects);\n\n  for (let index = 0, length = objects.length; index < length; index++) {\n    if (!func(objects[index])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Check if any of the arguments passed return true to function it relates to\n *\n * @param {Function} func\n * @returns {Function}\n */\nconst isitAny = (func) => (...objects) => {\n  objects = getAnyAllObjectParameters(objects);\n\n  for (let index = 0, length = objects.length; index < length; index++) {\n    if (func(objects[index])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/**\n * Check if the func applied to the object returns false\n *\n * @param {Function} func\n * @returns {Function}\n */\nconst isitNot = (func) => (...objects) => !func(...objects);\n\nlet isit = {\n      ...type,\n      ...presence,\n      ...regexp,\n      ...string,\n      ...arithmetic,\n      ...object,\n      ...array,\n      ...environment,\n      ...time,\n    },\n    all = {},\n    any = {},\n    not = {};\n\n/**\n * Apply appropriate keys to all, any, and not\n */\nfor (let key in isit) {\n  const isitFunction = isit[key];\n\n  if (noAllOrAnyFunctions.indexOf(key) === -1) {\n    all[key] = isitAll(isitFunction);\n    any[key] = isitAny(isitFunction);\n  }\n\n  not[key] = isitNot(isitFunction);\n}\n\nisit.all = all;\nisit.any = any;\nisit.not = not;\n\n/**\n * Shim for old functionality, as no longer needed\n *\n * @returns {object}\n */\nisit.setNamespace = () => this;\n\nexport default isit;\n","import {\n  isitFunction,\n  isitNull,\n  isitNumber,\n  isitObject,\n  isitUndefined,\n} from './type';\n\nconst toString = Object.prototype.toString;\n\nconst NODE_LIST_REGEXP = /^\\[object (HTMLCollection|NodeList)\\]$/;\n\n/**\n * Checks if object is an HTML element\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDomNode = (object) => !isitUndefined(object) && !isitNull(object) && object.nodeType > 0;\n\n/**\n * Checks if object is an HTMLCollection, for example\n * returned isArrayFrom document.querySelectorAll\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDomNodeList = (object) =>\n  !isitUndefined(object) && !isitNull(object) && NODE_LIST_REGEXP.test(toString.call(object));\n\n/**\n * Checks if object is a jQuery object\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitJquery = (object) => {\n  if (isitFunction(object)) {\n    const $object = object();\n\n    return isitObject($object) && !!$object.jquery;\n  }\n\n  return !!Object.getPrototypeOf(object).jquery;\n};\n\n/**\n * Checks if the number of keys in the object object\n * equals the count numeric value\n *\n * @param {any} object\n * @param {number} count\n * @returns {boolean}\n */\nexport const isitPropertyCount = (object, count) => {\n  if (!isitObject(object) || !isitNumber(count)) {\n    return false;\n  }\n\n  return Object.keys(object).length === count;\n};\n\n/**\n * Checks if the object object has the property property\n * (tell me that wasn't fun to read)\n *\n * @param {any} object\n * @param {any} property\n * @returns {*}\n */\nexport const isitPropertyDefined = (object, property) => isitObject(object) && object.hasOwnProperty(property);\n\n/**\n * Checks if the object is the window\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitWindowObject = (object) => typeof object === 'object' && 'setInterval' in object;\n\n/**\n * Functions we don't want to show up in any or all\n */\nexport const multiParamFunctions = ['propertyCount', 'propertyDefined'];\n\nexport default {\n  domNode: isitDomNode,\n  domNodeList: isitDomNodeList,\n  jquery: isitJquery,\n  propertyCount: isitPropertyCount,\n  propertyDefined: isitPropertyDefined,\n  windowObject: isitWindowObject,\n};\n","import {\n  isitArguments,\n  isitArray,\n  isitNaN,\n  isitNull,\n  isitObject,\n  isitRegExp,\n  isitUndefined,\n} from './type';\n\nconst WHITESPACE_REGEXP = /^\\s\\s*/;\n\n/**\n * Checks to see if object is solely whitespace (has no character values)\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitWhitespace = (object) => WHITESPACE_REGEXP.test(object);\n\n/**\n * Checks to see if the object is empty from a deep value perspective\n *  - if an array, checks if it has a length\n *  - if an object, checks to see if there are any propertyies on it\n *  - if regex, looks at the string value to determine if its an empty regex\n *  - if arguments, checks if length exists after being converted to an array\n *  - if undefined, null, or whitespace\n *  - if the conversion of the object via .toString() is empty\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitEmpty = (object) => {\n  if (isitArray(object)) {\n    return object.length === 0;\n  }\n\n  if (isitObject(object)) {\n    const propertyNames = Object.getOwnPropertyNames(object);\n\n    return propertyNames.length === 0;\n  }\n\n  if (isitRegExp(object)) {\n    const objectString = object.toString();\n\n    return objectString === '/(?:)/' || objectString === '//';\n  }\n\n  if (isitArguments(object)) {\n    return Array.prototype.slice.call(object).length === 0;\n  }\n\n  return isitUndefined(object) || isitNull(object) || isitWhitespace(object) || object.toString() === '';\n};\n\n/**\n * Checks to see if the object is not undefined and not null\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitExisty = (object) => object !== undefined && object !== null;\n\n/**\n * Checks to see if object is falsy based on classic JavaScript rules\n *  - undefined\n *  - null\n *  - 0\n *  - ''\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitFalsy = (object) => !object;\n\n/**\n * Checks to see if object is equal to a single empty space\n * (legacy from previous version, better function to use is .whitespace())\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitSpace = (object) => object === ' ';\n\n/**\n * Checks to see if object is truthy based on classic JavaScript rules\n * - not undefined\n * - not null\n * - !-- 0\n * - string with length\n * - not NaN\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitTruthy = (object) =>\n  isitExisty(object) && object !== false && !isitNaN(object) && object !== '' && object !== 0;\n\nexport default {\n  empty: isitEmpty,\n  existy: isitExisty,\n  falsy: isitFalsy,\n  space: isitSpace,\n  truthy: isitTruthy,\n  whitespace: isitWhitespace,\n};\n","// regex values to test a variety of values\n\n// Steven Levithan, Jan Goyvaerts: Regular Expressions Cookbook\n// Scott Gonzalez: Email address validation\n\n// eppPhone match extensible provisioning protocol format\n// nanpPhone match north american number plan format\n// dateString match m/d/yy and mm/dd/yyyy, allowing any combination of one or two digits for the day and month, and two\n// or four digits for the year\n// time match hours, minutes, and seconds, 24-hour clock\n\n/* eslint-disable max-len */\nlet regexps = {\n  affirmative: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/,\n  alphaNumeric: /^[A-Za-z0-9]+$/,\n  caPostalCode: /^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\\s?[0-9][A-Z][0-9]$/,\n  creditCard: /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,\n  dateString: /^(1[0-2]|0?[1-9])\\/(3[01]|[12][0-9]|0?[1-9])\\/(?:[0-9]{2})?[0-9]{2}$/,\n  email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\n  eppPhone: /^\\+[0-9]{1,3}\\.[0-9]{4,14}(?:x.+)?$/,\n  hexColor: /^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/,\n  hexadecimal: /^[0-9a-fA-F]+$/,\n  ip: /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n  ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\n  ipv6: /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n  isoDateString: /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])-?[1-7]|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s](([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)?(\\15([0-5]\\d))?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/,\n  nanpPhone: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\n  socialSecurityNumber: /^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$/,\n  timeString: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,\n  ukPostCode: /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/,\n  url: /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i,\n  usZipCode: /^[0-9]{5}(?:-[0-9]{4})?$/,\n};\n/* eslint-enable */\n\n/**\n * Checks to see if object is affirmative\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitAffirmative = (object) => regexps.affirmative.test(object);\n\n/**\n * Checks to see if object is alphanumeric\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitAlphaNumeric = (object) => regexps.alphaNumeric.test(object);\n\n/**\n * Checks to see if object is a valid Canadian postale code\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitCaPostalCode = (object) => regexps.caPostalCode.test(object);\n\n/**\n * Checks to see if object is a valid credit card number\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitCreditCard = (object) => regexps.creditCard.test(object);\n\n/**\n * Checks to see if object is a valid date string\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDateString = (object) => regexps.dateString.test(object);\n\n/**\n * Checks to see if object is a valid email address\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitEmail = (object) => regexps.email.test(object);\n\n/**\n * Checks to see if object is a valid EPP phone number\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitEppPhone = (object) => regexps.eppPhone.test(object);\n\n/**\n * Checks to see if object is a valid hexadecimal\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitHexadecimal = (object) => regexps.hexadecimal.test(object);\n\n/**\n * Checks to see if object is a valid hex color\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitHexColor = (object) => regexps.hexColor.test(object);\n\n/**\n * Checks to see if object is a valid IP address\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitIpAddress = (object) => regexps.ip.test(object);\n\n/**\n * Checks to see if object is a valid IPv4 address\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitIpv4Address = (object) => regexps.ipv4.test(object);\n\n/**\n * Checks to see if object is a valid IPv6 address\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitIpv6Address = (object) => regexps.ipv6.test(object);\n\n/**\n * Checks to see if object is a valid ISO date string\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitIsoDateString = (object) => regexps.isoDateString.test(object);\n\n/**\n * Checks to see if object is a valid NANP phone address\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitNanpPhone = (object) => regexps.nanpPhone.test(object);\n\n/**\n * Checks to see if object is a valid social security number\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitSocialSecurityNumber = (object) => regexps.socialSecurityNumber.test(object);\n\n/**\n * Checks to see if object is a valid time string\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitTimeString = (object) => regexps.timeString.test(object);\n\n/**\n * Checks to see if object is a valid UK postal code\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitUkPostCode = (object) => regexps.ukPostCode.test(object);\n\n/**\n * Checks to see if object is a valid URL\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitUrl = (object) => regexps.url.test(object);\n\n/**\n * Checks to see if object is a valid US zip code\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitUsZipCode = (object) => regexps.usZipCode.test(object);\n\n/**\n * Override the default RegExp value if you don't like it\n *\n * @param {RegExp} regExp\n * @param {string} regExpName\n */\nexport const setRegExp = (regExp, regExpName) => {\n  if (regexps.hasOwnProperty(regExpName)) {\n    regexps[regExpName] = regExp;\n  }\n};\n\nexport default {\n  affirmative: isitAffirmative,\n  alphaNumeric: isitAlphaNumeric,\n  caPostalCode: isitCaPostalCode,\n  creditCard: isitCreditCard,\n  dateString: isitDateString,\n  email: isitEmail,\n  eppPhone: isitEppPhone,\n  hexColor: isitHexColor,\n  hexadecimal: isitHexadecimal,\n  ip: isitIpAddress,\n  ipv4: isitIpv4Address,\n  ipv6: isitIpv6Address,\n  isoDateString: isitIsoDateString,\n  nanpPhone: isitNanpPhone,\n  setRegExp,\n  socialSecurityNumber: isitSocialSecurityNumber,\n  timeString: isitTimeString,\n  ukPostCode: isitUkPostCode,\n  url: isitUrl,\n  usZipCode: isitUsZipCode,\n};\n","import {isitEqual} from './arithmetic';\nimport {\n  isitArray,\n  isitString,\n} from './type';\n\nconst DATA_URL_REGEXP = /^\\s*data:([a-z]+\\/[a-z]+(;[a-z\\-]+\\=[a-z\\-]+)?)?(;base64)?,[a-z0-9\\!\\$\\&\\'\\,\\(\\)\\*\\+\\,\\;\\=\\-\\.\\_\\~\\:\\@\\/\\?\\%\\s]*\\s*$/i; // eslint-disable-line\nconst DOUBLE_BYTE_REGEXP = /[^\\u0000-\\u00ff]/;\nconst HTML_REGEXP = /<(\\\"[^\\\"]*\\\"|'[^']*'|[^'\\\">])*>/;\n\n/**\n * All necessary values for computation of getArrayOfWords is taken from lodash,\n * found at https://raw.githubusercontent.com/lodash/lodash/master/lodash.js\n */\nconst RS_ASTRAL_RANGE = '\\\\ud800-\\\\udfff';\nconst RS_COMBO_MARKS_RANGE = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23';\nconst RS_COMBO_SYMBOLS_RANGE = '\\\\u20d0-\\\\u20f0';\nconst RS_DINGBAT_RANGE = '\\\\u2700-\\\\u27bf';\nconst RS_LOWER_RANGE = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff';\nconst RS_MATH_OP_RANGE = '\\\\xac\\\\xb1\\\\xd7\\\\xf7';\nconst RS_NON_CHAR_RANGE = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf';\nconst RS_QUOTE_RANGE = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d';\nconst RS_SPACE_RANGE =\n  ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000';\nconst RS_UPPER_RANGE = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde';\nconst RS_VAR_RANGE = '\\\\ufe0e\\\\ufe0f';\nconst RS_BREAK_RANGE = RS_MATH_OP_RANGE + RS_NON_CHAR_RANGE + RS_QUOTE_RANGE + RS_SPACE_RANGE;\n\nconst RS_BREAK = `[${RS_BREAK_RANGE}]`;\nconst RS_COMBO = `[${RS_COMBO_MARKS_RANGE + RS_COMBO_SYMBOLS_RANGE}]`;\nconst RS_DIGITS = '\\\\d+';\nconst RS_DINGBAT = `[${RS_DINGBAT_RANGE}]`;\nconst RS_LOWER = `[${RS_LOWER_RANGE}]`;\nconst RS_MISC = `[^${RS_ASTRAL_RANGE +\n  RS_BREAK_RANGE +\n  RS_DIGITS +\n  RS_DINGBAT_RANGE +\n  RS_LOWER_RANGE +\n  RS_UPPER_RANGE}]`;\nconst RS_FITZ = '\\\\ud83c[\\\\udffb-\\\\udfff]';\nconst RS_MODIFIER = `(?:${RS_COMBO}|${RS_FITZ})`;\nconst RS_NON_ASTRAL = `[^${RS_ASTRAL_RANGE}]`;\nconst RS_REGIONAL = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\nconst RS_SURR_PAIR = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\nconst RS_UPPER = `[${RS_UPPER_RANGE}]`;\nconst RS_ZWJ = '\\\\u200d';\n\nconst RS_LOWER_MISC = `(?:${RS_LOWER}|${RS_MISC})`;\nconst RS_UPPER_MISC = `(?:${RS_UPPER}|${RS_MISC})`;\nconst RE_OPT_MOD = `${RS_MODIFIER}?`;\nconst RS_OPT_VAR = `[${RS_VAR_RANGE}]?`;\nconst RS_OPT_JOIN = `(?:${RS_ZWJ}(?:${[RS_NON_ASTRAL, RS_REGIONAL, RS_SURR_PAIR].join('|')})${RS_OPT_VAR +\n  RE_OPT_MOD})*`;\nconst RS_SEQ = RS_OPT_VAR + RE_OPT_MOD + RS_OPT_JOIN;\nconst RS_EMOJI = `(?:${[RS_DINGBAT, RS_REGIONAL, RS_SURR_PAIR].join('|')})${RS_SEQ}`;\n\nconst HAS_COMPLEX_WORD = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\nconst COMPLEX_WORD = RegExp(\n  [\n    `${RS_UPPER}?${RS_LOWER}+(?=${[RS_BREAK, RS_UPPER, '$'].join('|')})`,\n    `${RS_UPPER_MISC}+(?=${[RS_BREAK, RS_UPPER + RS_LOWER_MISC, '$'].join('|')})`,\n    `${RS_UPPER}?${RS_LOWER_MISC}+`,\n    `${RS_UPPER}+`,\n    RS_DIGITS,\n    RS_EMOJI,\n  ].join('|'),\n  'g'\n);\nconst SIMPLE_WORD = /[a-zA-Z0-9]+/g;\n\nconst getArrayOfWords = (string) => {\n  const pattern = HAS_COMPLEX_WORD.test(string) ? COMPLEX_WORD : SIMPLE_WORD;\n\n  return string.match(pattern) || [];\n};\n\n/**\n * Converts string passed to camelCase spelling\n *\n * @param {any} string\n * @returns {string}\n */\nconst toCamelCase = (string) => {\n  const arrayOfWords = getArrayOfWords(string);\n\n  let camelCaseString = '';\n\n  arrayOfWords.forEach((word, index) => {\n    camelCaseString += index === 0 ? word.toLowerCase() : word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n  });\n\n  return camelCaseString;\n};\n\n/**\n * Converts string passed to kebab-case spelling\n *\n * @param {any} string\n * @returns {string}\n */\nconst toKebabCase = (string) => {\n  const arrayOfWords = getArrayOfWords(string);\n\n  let kebabCaseString = '';\n\n  arrayOfWords.forEach((word, index) => {\n    if (index !== 0) {\n      kebabCaseString += '-';\n    }\n\n    kebabCaseString += word.toLowerCase();\n  });\n\n  return kebabCaseString;\n};\n/**\n * Converts string passed to snake_case spelling\n *\n * @param {any} string\n * @returns {string}\n */\nconst toSnakeCase = (string) => {\n  const arrayOfWords = getArrayOfWords(string);\n\n  let snakeCaseString = '';\n\n  arrayOfWords.forEach((word, index) => {\n    if (index !== 0) {\n      snakeCaseString += '_';\n    }\n\n    snakeCaseString += word.toLowerCase();\n  });\n\n  return snakeCaseString;\n};\n\n/**\n * Converts string passed to Start Case spelling\n *\n * @param {any} string\n * @returns {string}\n */\nconst toStartCase = (string) => {\n  const arrayOfWords = getArrayOfWords(string);\n\n  let startCaseString = '';\n\n  arrayOfWords.forEach((word, index) => {\n    if (index !== 0) {\n      startCaseString += ' ';\n    }\n\n    startCaseString += word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n  });\n\n  return startCaseString;\n};\n\n/**\n * Checks to see if the string object is spelled in proper\n * camelCase spelling\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitCamelCase = (object) => isitString(object) && object === toCamelCase(object);\n\n/**\n * Checks to see if the string object is capitalized, meaning\n * only that the first letter is uppercase\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitCapitalized = (object) => {\n  if (!isitString(object)) {\n    return false;\n  }\n\n  const words = object.split(' ');\n  const capitalized = words.map((word) => word.charAt(0).toUpperCase() + word.slice(1));\n\n  return isitEqual(words, capitalized);\n};\n\n/**\n * Checks to see if object is a valid data url\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDataUrl = (object) => DATA_URL_REGEXP.test(object);\n\n/**\n * Checks to see if object is a double byte integer\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDoubleByte = (object) => DOUBLE_BYTE_REGEXP.test(object);\n\n/**\n * Checks if string object ends with the string value endingString\n *\n * @param {any} object\n * @param {string} endingString\n * @returns {boolean}\n */\nexport const isitEndWith = (object, endingString) => {\n  if (!isitString(object) || !isitString(endingString)) {\n    return false;\n  }\n\n  const index = object.lastIndexOf(endingString);\n\n  return index !== -1 && index === object.length - endingString.length;\n};\n\n/**\n * Alias function for endWith\n */\nexport const isitEndsWith = isitEndWith;\n\n/**\n * Checks to see if object is valid HTML\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitHtml = (object) => HTML_REGEXP.test(object);\n\n/**\n * Checks if string object has the string value substring contained\n * within it\n *\n * @param {any} object\n * @param {string} substring\n * @returns {boolean}\n */\nexport const isitInclude = (object, substring) =>\n  (isitArray(object) || isitString(object)) && isitString(substring) && object.indexOf(substring) !== -1;\n\n/**\n * Alias function for include\n */\nexport const isitIncludes = isitInclude;\n\n/**\n * Checks to see if string object is spelled as proper kebab-case spelling\n *\n * @param {string} object\n * @returns {boolean}\n */\nexport const isitKebabCase = (object) => isitString(object) && object.toLowerCase() === toKebabCase(object);\n\n/**\n * Checks to see if string object is all lowercase\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitLowerCase = (object) => isitString(object) && object === object.toLowerCase();\n\n/**\n * Checks to see if string object is spelled identically\n * forwards and backwards, for example: tacocat\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitPalindrome = (object) => {\n  if (!isitString(object)) {\n    return false;\n  }\n\n  const spacelessString = object.replace(/\\s/g, '');\n\n  return (\n    spacelessString ===\n    spacelessString\n      .split('')\n      .reverse()\n      .join('')\n  );\n};\n\n/**\n * Checks to see if string object is spelling in proper\n * snake_case spelling\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitSnakeCase = (object) => isitString(object) && object.toLowerCase() === toSnakeCase(object);\n\n/**\n * Checks to see if string object is spelled in proper\n * Start Case spelling (meaning first letter of each word is\n * capitalized, and the rest of the word is lowercase)\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitStartCase = (object) => isitString(object) && object === toStartCase(object);\n\n/**\n * Checks to see if string object starts with string value\n * of substring\n *\n * @param {any} object\n * @param {string} substring\n * @returns {boolean}\n */\nexport const isitStartWith = (object, substring) =>\n  isitString(object) && isitString(substring) && object.indexOf(substring) === 0;\n\n/**\n * Alias function for startWith\n */\nexport const isitStartsWith = isitStartWith;\n\n/**\n * Checks to see if string object is all uppercase\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitUpperCase = (object) => isitString(object) && object === object.toUpperCase();\n\n/**\n * Functions we don't want to show in any or all\n */\nexport const multiParamFunctions = ['endWith', 'include', 'startWith'];\n\nexport default {\n  camelCase: isitCamelCase,\n  capitalized: isitCapitalized,\n  dataUrl: isitDataUrl,\n  doubleByte: isitDoubleByte,\n  endWith: isitEndWith,\n  endsWith: isitEndsWith,\n  html: isitHtml,\n  include: isitInclude,\n  includes: isitIncludes,\n  kebabCase: isitKebabCase,\n  lowerCase: isitLowerCase,\n  palindrome: isitPalindrome,\n  snakeCase: isitSnakeCase,\n  startCase: isitStartCase,\n  startWith: isitStartWith,\n  startsWith: isitStartsWith,\n  upperCase: isitUpperCase,\n};\n","import {\n  isitDate,\n  isitNaN,\n  isitNumber,\n  isitString,\n} from './type';\n\n/**\n * String values for the days of the week\n */\nconst DAY_STRINGS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\n/**\n * String values for the months of the year\n */\nconst MONTH_STRINGS = [\n  'january',\n  'february',\n  'march',\n  'april',\n  'may',\n  'june',\n  'july',\n  'august',\n  'september',\n  'october',\n  'november',\n  'december',\n];\n\n/**\n * Checks to see if date object is the same day of the week as\n * the string dayString\n *\n * @param {any} object\n * @param {string} dayString\n * @returns {boolean}\n */\nexport const isitDay = (object, dayString = DAY_STRINGS[new Date().getDay()]) =>\n  isitDate(object) && isitString(dayString) && dayString.toLowerCase() === DAY_STRINGS[object.getDay()];\n\n/**\n * Checks to see if the date object is in daylight savings time of year\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDayLightSavingTime = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const objectYear = object.getFullYear();\n  const january = new Date(objectYear, 0, 1);\n  const july = new Date(objectYear, 6, 1);\n\n  return object.getTimezoneOffset() < Math.max(january.getTimezoneOffset(), july.getTimezoneOffset());\n};\n\n/**\n * Function alias for proper spelling\n */\nexport const isitDaylightSavingsTime = isitDayLightSavingTime;\n\n/**\n * Checks to see if the date object is in the future\n * compared to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitFuture = (object) => isitDate(object) && object.valueOf() > Date.now();\n\n/**\n * Checks to see if the date object is at least the minimumDate,\n * and at most the maximumDate\n *\n * @param {any} object\n * @param {date} minimumDate\n * @param {date} maximumDate\n * @returns {boolean}\n */\nexport const isitInDateRange = (object, minimumDate, maximumDate) => {\n  if (!isitDate(object) || !isitDate(minimumDate) || !isitDate(maximumDate)) {\n    return false;\n  }\n\n  const objectTime = object.getTime();\n\n  return objectTime >= minimumDate.getTime() && objectTime <= maximumDate.getTime();\n};\n\n/**\n * Checks to see if date object is within the last month relative to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInLastMonth = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const today = new Date();\n  const oneMonthAgo = new Date(new Date().setMonth(new Date().getMonth() - 1));\n\n  return isitInDateRange(object, oneMonthAgo, today);\n};\n\n/**\n * Checks to see if date object is within the last week relative to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInLastWeek = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const today = new Date();\n  const sevenDaysAgo = new Date(new Date().setDate(new Date().getDate() - 7));\n\n  return isitInDateRange(object, sevenDaysAgo, today);\n};\n\n/**\n * Checks to see if date object is within the last year relative to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInLastYear = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const today = new Date();\n  const oneYearAgo = new Date(new Date().setFullYear(new Date().getFullYear() - 1));\n\n  return isitInDateRange(object, oneYearAgo, today);\n};\n\n/**\n * Checks to see if date object is within the next month relative to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInNextMonth = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const today = new Date();\n  const oneMonthFromNow = new Date(new Date().setMonth(new Date().getMonth() + 1));\n\n  return isitInDateRange(object, today, oneMonthFromNow);\n};\n\n/**\n * Checks to see if date object is within the next week relative to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInNextWeek = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const today = new Date();\n  const sevenDaysFromNow = new Date(new Date().setDate(new Date().getDate() + 7));\n\n  return isitInDateRange(object, today, sevenDaysFromNow);\n};\n\n/**\n * Checks to see if date object is within the next year relative to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitInNextYear = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const today = new Date();\n  const oneYearFromNow = new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n\n  return isitInDateRange(object, today, oneYearFromNow);\n};\n\n/**\n * Checks if number object is considered a leap year\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitLeapYear = (object) =>\n  isitNumber(object) && ((object % 4 === 0 && object % 100 !== 0) || object % 400 === 0);\n\n/**\n * Checks to see if date object is the same month of the year\n * as monthString\n *\n * @param {any} object\n * @param {string} monthString\n * @returns {boolean}\n */\nexport const isitMonth = (object, monthString = MONTH_STRINGS[new Date().getMonth()]) =>\n  isitDate(object) && isitString(monthString) && monthString.toLowerCase() === MONTH_STRINGS[object.getMonth()];\n\n/**\n * Checks to see if date object is in the past relative to now\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitPast = (object) => isitDate(object) && object.valueOf() < Date.now();\n\n/**\n * Checks to see if date object is in the same quarter as\n * quarterNumber\n *\n * @param {any} object\n * @param {number} quarterNumber\n * @returns {boolean}\n */\nexport const isitQuarterOfYear = (object, quarterNumber) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  quarterNumber = +quarterNumber;\n\n  return (\n    isitNumber(quarterNumber) && !isitNaN(quarterNumber) && quarterNumber === Math.floor((object.getMonth() + 3) / 3)\n  );\n};\n\n/**\n * Checks to see if date object is today\n *\n * @param {any} object\n * @param {date} today\n * @returns {boolean}\n */\nexport const isitToday = (object, today = new Date()) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    today = new Date();\n  }\n\n  return object.toDateString() === today.toDateString();\n};\n\n/**\n * Checks to see if date object is tomorrow\n *\n * @param {any} object\n * @param {date} tomorrow\n * @returns {boolean}\n */\nexport const isitTomorrow = (object, tomorrow = new Date(new Date().setDate(new Date().getDate() + 1))) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (process.env.NODE_ENV === 'production') {\n    tomorrow = new Date(now.setDate(now.getDate() + 1));\n  }\n\n  return object.toDateString() === tomorrow.toDateString();\n};\n\n/**\n * Checks to see if date object falls on neither Saturday nor Sunday\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitWeekday = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const day = object.getDay();\n\n  return day !== 0 && day !== 6;\n};\n\n/**\n * Checks to see if date object falls on either Saturday or Sunday\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitWeekend = (object) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const day = object.getDay();\n\n  return day === 0 || day === 6;\n};\n\n/**\n * Checks to see if date object is the same year\n * as yearNumber\n *\n * @param {any} object\n * @param {number} yearNumber\n * @returns {boolean}\n */\nexport const isitYear = (object, yearNumber = new Date().getFullYear()) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  yearNumber = +yearNumber;\n\n  return isitNumber(yearNumber) && !isitNaN(yearNumber) && yearNumber === object.getFullYear();\n};\n\n/**\n * Checks to see if date object is yesterday\n *\n * @param {any} object\n * @param {date} yesterday\n * @returns {boolean}\n */\nexport const isitYesterday = (object, yesterday = new Date(new Date().setDate(new Date().getDate() - 1))) => {\n  if (!isitDate(object)) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (process.env.NODE_ENV === 'production') {\n    yesterday = new Date(now.setDate(now.getDate() + 1));\n  }\n\n  return object.toDateString() === yesterday.toDateString();\n};\n\n/**\n * Functions we don't want to show up in any or all\n */\nexport const multiParamFunctions = ['day', 'inDateRange', 'month', 'quarterOfYear', 'year'];\n\nexport default {\n  day: isitDay,\n  dayLightSavingTime: isitDayLightSavingTime,\n  daylightSavingsTime: isitDaylightSavingsTime,\n  future: isitFuture,\n  inDateRange: isitInDateRange,\n  inLastMonth: isitInLastMonth,\n  inLastWeek: isitInLastWeek,\n  inLastYear: isitInLastYear,\n  inNextMonth: isitInNextMonth,\n  inNextWeek: isitInNextWeek,\n  inNextYear: isitInNextYear,\n  leapYear: isitLeapYear,\n  month: isitMonth,\n  past: isitPast,\n  quarterOfYear: isitQuarterOfYear,\n  today: isitToday,\n  tomorrow: isitTomorrow,\n  weekday: isitWeekday,\n  weekend: isitWeekend,\n  year: isitYear,\n  yesterday: isitYesterday,\n};\n","/**\n * Get the toString of the object\n *\n * @param {any} object\n * @returns {string}\n */\nconst toString = (object) => Object.prototype.toString.call(object);\n\n/**\n * Get the full toString value string based on type\n *\n * @param {string} type\n * @returns {string}\n */\nconst getObjectToStringValue = (type) => `[object ${type}]`;\n\n/**\n * Checks to see if object is null\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitNull = (object) => object === null;\n\n/**\n * Checks to see if object is an arguments object\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitArguments = (object) =>\n  (!isitNull(object) && toString(object) === getObjectToStringValue('Arguments'))\n  || !!(object && typeof object === 'object' && 'callee' in object);\n\n/**\n * Checks to see if object is an array\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitArray = (object) => toString(object) === getObjectToStringValue('Array');\n\n/**\n * Checks to see if object is a boolean\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitBoolean = (object) =>\n  object === true || object === false || toString(object) === getObjectToStringValue('Boolean');\n\n/**\n * Checks to see if object is a string\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitString = (object) => toString(object) === getObjectToStringValue('String');\n\n/**\n * Checks to see if object is a character (string with length of 1)\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitChar = (object) => isitString(object) && object.length === 1;\n\n/**\n * Checks to see if object is a date\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitDate = (object) => toString(object) === getObjectToStringValue('Date');\n\n/**\n * Checks to see if object is an error\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitError = (object) => toString(object) === getObjectToStringValue('Error');\n\n/**\n * Checks to see if object is a function\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitFunction = (object) =>\n  toString(object) === getObjectToStringValue('Function') || typeof object === 'function';\n\n/**\n * Checks to see if object is a JSON string\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitJSON = (object) => {\n  try {\n    JSON.parse(object);\n\n    return true;\n  } catch (ex) {\n    return false;\n  }\n};\n\n/**\n * Checks to see if object is a NaN\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitNaN = (object) => object !== object;\n\n/**\n * Checks to see if object is a number\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitNumber = (object) => !isitNaN(object) && toString(object) === getObjectToStringValue('Number');\n\n/**\n * Checks to see if object is an object\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitObject = (object) => toString(object) === getObjectToStringValue('Object') && !!object;\n\n/**\n * Checks to see if object is a regex\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitRegExp = (object) => toString(object) === getObjectToStringValue('RegExp');\n\n/**\n * Checks to see if objects are the same type\n *\n * @param {any} object1\n * @param {any} object2\n * @returns {boolean}\n */\nexport const isitSameType = (object1, object2) => {\n  if (isitNaN(object1) && isitNaN(object2)) {\n    return isitNaN(object1) === isitNaN(object2);\n  }\n\n  return toString(object1) === toString(object2);\n};\n\n/**\n * Checks to see if object is a Symbol\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitSymbol = (object) => typeof object === 'symbol';\n\n/**\n * Checks to see if object is a TypedArray\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitTypedArray = (object) => {\n  const objectToString = toString(object);\n\n  return (\n    objectToString === getObjectToStringValue('Int8Array')\n    || objectToString === getObjectToStringValue('Uint8Array')\n    || objectToString === getObjectToStringValue('Uint8ClampedArray')\n    || objectToString === getObjectToStringValue('Int16Array')\n    || objectToString === getObjectToStringValue('Uint16Array')\n    || objectToString === getObjectToStringValue('Int32Array')\n    || objectToString === getObjectToStringValue('Uint32Array')\n    || objectToString === getObjectToStringValue('Float32Array')\n    || objectToString === getObjectToStringValue('Float64Array')\n  );\n};\n\n/**\n * Checks to see if object is undefined\n *\n * @param {any} object\n * @returns {boolean}\n */\nexport const isitUndefined = (object) => object === void 0;\n\nexport default {\n  arguments: isitArguments,\n  array: isitArray,\n  boolean: isitBoolean,\n  char: isitChar,\n  date: isitDate,\n  error: isitError,\n  function: isitFunction,\n  json: isitJSON,\n  nan: isitNaN,\n  null: isitNull,\n  number: isitNumber,\n  object: isitObject,\n  regexp: isitRegExp,\n  sameType: isitSameType,\n  string: isitString,\n  symbol: isitSymbol,\n  typedArray: isitTypedArray,\n  undefined: isitUndefined,\n};\n"],"sourceRoot":""}